name: Go

on: ["push", "pull_request"]

jobs:

  test:
    name: Test
    strategy:
      matrix:
        # os: ["windows-latest", "ubuntu-latest", "macOS-latest"]
        os: ["windows-latest"]
        go: ["1.15.x"]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: msys2/setup-msys2@v2
      if: runner.os == 'Windows'
      with:
          install: pacman-mirrors pkg-config base-devel mingw-w64-x86_64-toolchain mingw-w64-x86_64-go
          update: false
    - uses: actions/checkout@v1
    - if: runner.os == 'Windows'
      shell: msys2 {0}
      run: |
        echo "Build and install openssl......"
        bash ./install_openssl.sh
    - if: runner.os == 'macOS'
      run: |
        brew install binutils coreutils wget
        SUDO=sudo bash ./install_openssl.sh
    - if: runner.os == 'Linux'
      run: |
        SUDO=sudo bash ./install_openssl.sh
    - if: runner.os == 'Windows'
      shell: msys2 {0}
      run: |
        bash make
        bash make build
    - uses: actions/setup-go@v1
      if: runner.os != 'Windows'
      with:
        go-version: ${{ matrix.go }}
    - if: runner.os != 'Windows'
      run: |
        make
        make build

  # lint:
  #   name: "Run static analysis"
  #   runs-on: "ubuntu-latest"
  #   steps:
  #   - uses: actions/setup-go@v1
  #     with:
  #       go-version: "1.14.x"
  #   - uses: actions/checkout@v2
  #   - run: make lint
